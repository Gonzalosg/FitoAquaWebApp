// <auto-generated />
using System;
using FitoAquaWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitoAquaWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250511172347_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FitoAquaWebApp.Models.Albaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MesReferencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ObraId");

                    b.ToTable("Albaranes");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.DetalleAlbaran", b =>
                {
                    b.Property<int>("AlbaranId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("CantidadUsada")
                        .HasColumnType("int");

                    b.HasKey("AlbaranId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("DetallesAlbaran");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.FotoEstadoObra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ObraId");

                    b.ToTable("FotosEstadoObra");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.ParteAveria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ObraId");

                    b.ToTable("PartesAveria");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContraseniaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.UsuarioObra", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "ObraId");

                    b.HasIndex("ObraId");

                    b.ToTable("UsuarioObras");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Albaran", b =>
                {
                    b.HasOne("FitoAquaWebApp.Models.Usuario", "Empleado")
                        .WithMany("Albaranes")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitoAquaWebApp.Models.Obra", "Obra")
                        .WithMany("Albaranes")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.DetalleAlbaran", b =>
                {
                    b.HasOne("FitoAquaWebApp.Models.Albaran", "Albaran")
                        .WithMany("Detalles")
                        .HasForeignKey("AlbaranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitoAquaWebApp.Models.Material", "Material")
                        .WithMany("DetallesAlbaran")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Albaran");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.FotoEstadoObra", b =>
                {
                    b.HasOne("FitoAquaWebApp.Models.Usuario", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitoAquaWebApp.Models.Obra", "Obra")
                        .WithMany("FotosEstado")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Obra", b =>
                {
                    b.HasOne("FitoAquaWebApp.Models.Usuario", "Cliente")
                        .WithMany("ObrasCliente")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.ParteAveria", b =>
                {
                    b.HasOne("FitoAquaWebApp.Models.Usuario", "Empleado")
                        .WithMany("PartesAveria")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitoAquaWebApp.Models.Obra", "Obra")
                        .WithMany("PartesAveria")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.UsuarioObra", b =>
                {
                    b.HasOne("FitoAquaWebApp.Models.Obra", "Obra")
                        .WithMany("Asignaciones")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitoAquaWebApp.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obra");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Albaran", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Material", b =>
                {
                    b.Navigation("DetallesAlbaran");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Obra", b =>
                {
                    b.Navigation("Albaranes");

                    b.Navigation("Asignaciones");

                    b.Navigation("FotosEstado");

                    b.Navigation("PartesAveria");
                });

            modelBuilder.Entity("FitoAquaWebApp.Models.Usuario", b =>
                {
                    b.Navigation("Albaranes");

                    b.Navigation("ObrasCliente");

                    b.Navigation("PartesAveria");
                });
#pragma warning restore 612, 618
        }
    }
}
